<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-17T07:51:17 IST" name="Suite" finished-at="2023-03-17T07:52:51 IST" duration-ms="94240">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.loginErrorValidation()[pri:0, instance:bikashautomationframework.tests.ErrorValidationsTest@61710c6]" name="loginErrorValidation" class="bikashautomationframework.tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]" name="submitOrder" class="bikashautomationframework.tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2023-03-17T07:51:17 IST" name="Error Validation Test" finished-at="2023-03-17T07:52:26 IST" duration-ms="68801">
      <class name="bikashautomationframework.tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:bikashautomationframework.tests.ErrorValidationsTest@61710c6]" started-at="2023-03-17T07:51:17 IST" name="launchApplication" finished-at="2023-03-17T07:51:48 IST" duration-ms="30566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:bikashautomationframework.tests.ErrorValidationsTest@61710c6]" started-at="2023-03-17T07:51:48 IST" name="loginErrorValidation" finished-at="2023-03-17T07:51:50 IST" duration-ms="2198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:bikashautomationframework.tests.ErrorValidationsTest@61710c6]" started-at="2023-03-17T07:51:50 IST" name="tearDown" finished-at="2023-03-17T07:51:51 IST" duration-ms="1203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:bikashautomationframework.tests.ErrorValidationsTest@61710c6]" started-at="2023-03-17T07:51:51 IST" name="launchApplication" finished-at="2023-03-17T07:52:03 IST" duration-ms="11599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:bikashautomationframework.tests.ErrorValidationsTest@61710c6]" started-at="2023-03-17T07:52:03 IST" name="productErrorValidation" finished-at="2023-03-17T07:52:22 IST" duration-ms="19129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:bikashautomationframework.tests.ErrorValidationsTest@61710c6]" started-at="2023-03-17T07:52:22 IST" name="tearDown" finished-at="2023-03-17T07:52:26 IST" duration-ms="3921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- bikashautomationframework.tests.ErrorValidationsTest -->
    </test> <!-- Error Validation Test -->
    <test started-at="2023-03-17T07:51:17 IST" name="Submit Order Test" finished-at="2023-03-17T07:52:51 IST" duration-ms="94229">
      <class name="bikashautomationframework.tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]" started-at="2023-03-17T07:51:18 IST" name="launchApplication" finished-at="2023-03-17T07:51:47 IST" duration-ms="28631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]" started-at="2023-03-17T07:51:47 IST" name="submitOrder" data-provider="getData" finished-at="2023-03-17T07:52:13 IST" duration-ms="26049" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=MyLearning@1989, product=ZARA COAT 3, email=bukashnsec@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button _ngcontent-ene-c33="" routerlink="/dashboard/cart" class="btn btn-custom" style="margin-top: -10px;" tabindex="0">...</button> is not clickable at point (1110, 27). Other element would receive the click: <div _ngcontent-ene-c31="" class="ngx-spinner-overlay ng-tns-c31-1 ng-trigger ng-trigger-fadeIn ng-star-inserted ng-animating" style="background-color: rgba(51, 51, 51, 0.8); z-index: 99999; position: fixed;">...</div>
  (Session info: chrome=110.0.5481.178)
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-JBKRS0T', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8037f9918a6d1a5ec6beb44369bf9bd3, clickElement {id=7c3a1eed-f881-480d-8405-d227aa9f53df}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.178, chrome: {chromedriverVersion: 110.0.5481.77 (65ed616c6e8e..., userDataDir: C:\Users\dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:63007}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:63007/devtoo..., se:cdpVersion: 110.0.5481.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (8037f9918a6d1a5ec6beb44369bf9bd3)] -> css selector: [routerlink*='cart']]
Session ID: 8037f9918a6d1a5ec6beb44369bf9bd3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button _ngcontent-ene-c33="" routerlink="/dashboard/cart" class="btn btn-custom" style="margin-top: -10px;" tabindex="0">...</button> is not clickable at point (1110, 27). Other element would receive the click: <div _ngcontent-ene-c31="" class="ngx-spinner-overlay ng-tns-c31-1 ng-trigger ng-trigger-fadeIn ng-star-inserted ng-animating" style="background-color: rgba(51, 51, 51, 0.8); z-index: 99999; position: fixed;">...</div>
  (Session info: chrome=110.0.5481.178)
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-JBKRS0T', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8037f9918a6d1a5ec6beb44369bf9bd3, clickElement {id=7c3a1eed-f881-480d-8405-d227aa9f53df}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.178, chrome: {chromedriverVersion: 110.0.5481.77 (65ed616c6e8e..., userDataDir: C:\Users\dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:63007}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:63007/devtoo..., se:cdpVersion: 110.0.5481.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (8037f9918a6d1a5ec6beb44369bf9bd3)] -> css selector: [routerlink*='cart']]
Session ID: 8037f9918a6d1a5ec6beb44369bf9bd3
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy16.click(Unknown Source)
at bikashautomationframework.abstractComponents.AbstractComponent.goToCartPage(AbstractComponent.java:39)
at bikashautomationframework.tests.SubmitOrderTest.submitOrder(SubmitOrderTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]" started-at="2023-03-17T07:52:14 IST" name="tearDown" finished-at="2023-03-17T07:52:15 IST" duration-ms="551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]" started-at="2023-03-17T07:52:15 IST" name="launchApplication" finished-at="2023-03-17T07:52:26 IST" duration-ms="10984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]" started-at="2023-03-17T07:52:26 IST" name="submitOrder" data-provider="getData" finished-at="2023-03-17T07:52:48 IST" duration-ms="22241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ADIDAS ORIGINAL, email=anshika@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]" started-at="2023-03-17T07:52:48 IST" name="tearDown" finished-at="2023-03-17T07:52:51 IST" duration-ms="3174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]" started-at="2023-03-17T07:52:51 IST" name="OrderHistoryTest" finished-at="2023-03-17T07:52:51 IST" depends-on-methods="bikashautomationframework.tests.SubmitOrderTest.submitOrder" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method bikashautomationframework.tests.SubmitOrderTest.OrderHistoryTest() on instance bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1 depends on not successfully finished methods 
[bikashautomationframework.tests.SubmitOrderTest.submitOrder() on instance bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method bikashautomationframework.tests.SubmitOrderTest.OrderHistoryTest() on instance bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1 depends on not successfully finished methods 
[bikashautomationframework.tests.SubmitOrderTest.submitOrder() on instance bikashautomationframework.tests.SubmitOrderTest@5c7bfdc1]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:150)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
      </class> <!-- bikashautomationframework.tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
